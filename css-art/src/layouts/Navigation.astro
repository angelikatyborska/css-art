---
import type {Route} from "../pages/routes";
import links from "./links";
import routes from "../pages/routes";

interface Props {
  newestRoute: Route;
  slug: string;
}

const { newestRoute, slug } = Astro.props;
---
<script>
  const links = Array.from(document.querySelectorAll('#nav a'))

  document.addEventListener('astro:page-load', () => {
    links.forEach(link => {
        link.setAttribute('aria-current', link.getAttribute('href') === document.location.pathname ? "page" : "false")
      }
    )
  })
</script>

<nav id="nav" transition:persist>
  <section>
    <h2>grids: </h2>
    {links.grids.map(link =>
      <a href={link} aria-current={link === `/${slug}` ? "page" : "false"}>
        { routes.find(r => r.params.slug === link)?.props.title }
        {link === newestRoute.params.slug ? <span class="new-route-marker">*</span> : ''}
      </a>
    )}
  </section>
  <section>
    <h2>misc: </h2>
    {links.misc.map(link =>
      <a href={link} aria-current={link === `/${slug}` ? "page" : "false"}>
        { routes.find(r => r.params.slug === link)?.props.title }
        {link === newestRoute.params.slug ? <span class="new-route-marker">*</span> : ''}
      </a>
    )}
  </section>
</nav>

<style>
  nav {
    > section {
      display: flex;
      flex-wrap: wrap;
      column-gap: 1rem;
      margin-bottom: 1rem;

      h2 {
        font-size: inherit;
        margin: 0;
      }
    }
  }
</style>
